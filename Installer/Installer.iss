; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6D87B53E-0312-4FC9-A348-4C789A36200E}
AppName=MyWindowsMediaPlayer
AppVersion=1.0
;AppVerName=MyWindowsMediaPlayer 1.0
AppPublisher=Epitech
AppPublisherURL=http://www.epitech.eu
AppSupportURL=http://www.epitech.eu
AppUpdatesURL=http://www.epitech.eu
DefaultDirName={pf}\MyWindowsMediaPlayer
DefaultGroupName=MyWindowsMediaPlayer
AllowNoIcons=yes
OutputDir=D:\Projects\MyWindowsMediaPlayer\Installer
OutputBaseFilename=MyWindowsMediaPlayer_Setup
SetupIconFile=D:\Projects\MyWindowsMediaPlayer\MyResources\movie3.ico
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Dirs]
Name: "{app}\MyResources"
Name: "{localappdata}\Epitech"

[Files]
Source: "D:\Projects\MyWindowsMediaPlayer\MyWindowsMediaPlayer.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\AudioIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnFullScreen.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnMute.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnMuted.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnNext.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnPause.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnPlay.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnPrev.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\BtnStop.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\ControlBackground.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\DefaultTexture.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\ImageIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\LibraryIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\LoadErrorIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\Loading.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\movie3.ico"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\PlaylistIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\VideoIcon.png"; DestDir: "{app}\MyResources"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\Microsoft.WindowsAPICodePack.Shell.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\Microsoft.WindowsAPICodePack.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Projects\MyWindowsMediaPlayer\MyResources\__MyLibrary"; DestDir: "{localappdata}\Epitech"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\MyWindowsMediaPlayer"; Filename: "{app}\MyWindowsMediaPlayer.exe"
Name: "{commondesktop}\MyWindowsMediaPlayer"; Filename: "{app}\MyWindowsMediaPlayer.exe"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\MyWindowsMediaPlayer"; Filename: "{app}\MyWindowsMediaPlayer.exe"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\MyWindowsMediaPlayer.exe"; Description: "{cm:LaunchProgram,MyWindowsMediaPlayer}"; Flags: nowait postinstall skipifsilent

[Code]
function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1.4322'     .NET Framework 1.1
//    'v2.0.50727'    .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key: string;
    install, release, serviceCount: cardinal;
    check45, success: boolean;
var reqNetVer : string;
begin
    // .NET 4.5 installs as update to .NET 4.0 Full
    if version = 'v4.5' then begin
        version := 'v4\Full';
        check45 := true;
    end else
        check45 := false;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0/4.5 uses value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 uses additional value Release
    if check45 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= 378389);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;